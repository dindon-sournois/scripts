#!/bin/bash

function leave () {
    i3b-send-signal 2  # volume
    i3b-send-signal 22 # bluetooth
    exit 1
}

if [[ -z "$@" ]]; then
    echo "0 Integrated speakers"
    nl -w1 -s ' ' <(bluetoothctl devices | cut -d ' ' -f3-)
else
    opt=$(echo $@|awk '{print $1}')
    if [[ "${opt}" == 0 ]]; then
        pactl set-card-profile alsa_card.pci-0000_00_1f.3 output:analog-stereo+input:analog-stereo
        pactl set-card-profile bluez_card.88_C6_26_6F_71_FA off
        bluetoothctl power off >/dev/null 2>/dev/null
        bluetoothctl agent off >/dev/null 2>/dev/null
        bluetoothctl disconnect >/dev/null 2>/dev/null
    else
        name=$(echo $@ | awk '{$1=""; print $0}')
        [[ ${name} == "" ]] && leave

        old_status=$(bluetoothctl show | grep "Powered:" | awk '{print $2}')
        bluetoothctl power on >/dev/null 2>/dev/null
        bluetoothctl agent on >/dev/null 2>/dev/null
        # strict pattern matching to avoid successfully connecting to a device when entering gibberish
        selected=$(bluetoothctl devices | grep -xE "^Device ([0-9]|[a-Z]){2}(:([a-Z]|[0-9]){2}){5}${name}$")

        if [[ ${selected} == "" ]]; then
            bluetoothctl power ${old_status} >/dev/null 2>/dev/null
            bluetoothctl agent ${old_status} >/dev/null 2>/dev/null
            leave
        fi

        addr=$(echo ${selected} | awk '{print $2}')
        [[ $(bluetoothctl info ${addr} | grep "Connected: yes") ]] && leave
        bluetoothctl disconnect >/dev/null 2>/dev/null
        bluetoothctl connect ${addr} >/dev/null 2>/dev/null
	card=$(echo ${addr} | tr ':' '_')
        pactl set-card-profile bluez_card.${card} a2dp_sink
        pactl set-card-profile alsa_card.pci-0000_00_1f.3 off
    fi
    leave
fi
